{"version":3,"sources":["components/CheckBox/CheckBox.module.scss","components/Label/Label.module.scss","components/IconRoundButton/IconRoundButton.module.scss","components/LabelWithIcon/LabelWithIcon.module.scss","components/Layout/FullWidthPanel/FullWidthPanel.module.scss","components/Layout/ContentPanel/ContentPanel.module.scss","constants/keyCodes.ts","composition/composition.ts","components/SlidePanel/SlidePanel.tsx","components/Layout/FullWidthPanel/FullWidthPanel.tsx","components/Title/Title.tsx","components/IconRoundButton/IconRoundButton.tsx","components/LabelWithIcon/LabelWithIcon.tsx","components/CheckBox/CheckBox.tsx","components/Label/Label.tsx","components/Layout/ContentPanel/ContentPanel.tsx","App.tsx","serviceWorker.ts","index.tsx","components/SlidePanel/SlidePanel.module.scss"],"names":["module","exports","layout-panel","layout-panel-1column","layout-panel-2columns","layout-halign-left","layout-halign-right","layout-halign-center","layout-valign-top","layout-valign-bottom","layout-valign-center","component","checkBoxElement","textElement","left","right","small","medium","large","extraLarge","componentWrapper","iconElement","keyCodes","ESC","ENTER","ComponentBase","_React$Component","properties","state","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","React","Component","SlidePanel","_ComponentBase","_this","open","bind","assertThisInitialized","close","hide","escFunction","createClass","key","value","document","addEventListener","focus","removeEventListener","event","keyCode","onClose","props","setState","onOpen","focusRef","_this2","Content","content","_this$props","_this$props$transitio","transitionName","styles","transitionEnterTimeout","transitionLeaveTimeout","classes","classNames","componentClasses","react","react_transition_group","in","enter","enterActive","exit","leave","exitActive","leaveActive","timeout","unmountOnExit","className","blocker","assign","openPanel","closePanel","hidePanel","children","FullWidthPanel","skin","Title","text","IconRoundButton","elementClasses","LabelWithIcon","apply","arguments","iconElementClasses","iconClassName","textHref","href","CheckBox","checkBoxElementClasses","textElementClasses","Label","textSizeClass","ContentPanel","App","react_default","a","createElement","SlidePanel_SlidePanel","FullWidthPanel_FullWidthPanel","Title_Title","IconRoundButton_IconRoundButton","LabelWithIcon_LabelWithIcon","badgeCounter","CheckBox_CheckBox","Label_Label","ContentPanel_ContentPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","panel","opacity","wide"],"mappings":"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","file":"static/js/main.11dd9173.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-panel\":\"CheckBox_layout-panel__3A8um\",\"layout-panel-1column\":\"CheckBox_layout-panel-1column__2xhPQ\",\"layout-panel-2columns\":\"CheckBox_layout-panel-2columns__2PDBb\",\"layout-halign-left\":\"CheckBox_layout-halign-left__2NbKc\",\"layout-halign-right\":\"CheckBox_layout-halign-right__1vtmp\",\"layout-halign-center\":\"CheckBox_layout-halign-center__3wKXX\",\"layout-valign-top\":\"CheckBox_layout-valign-top__1r_kT\",\"layout-valign-bottom\":\"CheckBox_layout-valign-bottom__1hDP4\",\"layout-valign-center\":\"CheckBox_layout-valign-center__2kGPF\",\"component\":\"CheckBox_component__1ALg8\",\"checkBoxElement\":\"CheckBox_checkBoxElement__2B6mX\",\"textElement\":\"CheckBox_textElement__2WwTs\",\"left\":\"CheckBox_left__2aGbW\",\"right\":\"CheckBox_right__2DrNe\",\"small\":\"CheckBox_small__HOY9h\",\"medium\":\"CheckBox_medium__3CeGT\",\"large\":\"CheckBox_large__3_MFK\",\"extraLarge\":\"CheckBox_extraLarge__3NlyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-panel\":\"Label_layout-panel__1J2D1\",\"layout-panel-1column\":\"Label_layout-panel-1column__n692r\",\"layout-panel-2columns\":\"Label_layout-panel-2columns__3MAV2\",\"layout-halign-left\":\"Label_layout-halign-left__25Opt\",\"layout-halign-right\":\"Label_layout-halign-right__3eTB3\",\"layout-halign-center\":\"Label_layout-halign-center__1EUnQ\",\"layout-valign-top\":\"Label_layout-valign-top__2foeK\",\"layout-valign-bottom\":\"Label_layout-valign-bottom__3Pl4o\",\"layout-valign-center\":\"Label_layout-valign-center__2HiCI\",\"component\":\"Label_component__1dStO\",\"checkBoxElement\":\"Label_checkBoxElement__1YxzL\",\"textElement\":\"Label_textElement__3pZUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"IconRoundButton_component__2KS9Z\",\"componentWrapper\":\"IconRoundButton_componentWrapper__28VZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-panel\":\"LabelWithIcon_layout-panel__2Enup\",\"layout-panel-1column\":\"LabelWithIcon_layout-panel-1column__28z1s\",\"layout-panel-2columns\":\"LabelWithIcon_layout-panel-2columns__16Fi3\",\"layout-halign-left\":\"LabelWithIcon_layout-halign-left__2R-bn\",\"layout-halign-right\":\"LabelWithIcon_layout-halign-right__18BIe\",\"layout-halign-center\":\"LabelWithIcon_layout-halign-center__1USla\",\"layout-valign-top\":\"LabelWithIcon_layout-valign-top__3FRrM\",\"layout-valign-bottom\":\"LabelWithIcon_layout-valign-bottom__3R0bH\",\"layout-valign-center\":\"LabelWithIcon_layout-valign-center__1RJmo\",\"component\":\"LabelWithIcon_component__1MuZO\",\"iconElement\":\"LabelWithIcon_iconElement__3Gzhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-panel\":\"FullWidthPanel_layout-panel__T2vPb\",\"layout-panel-1column\":\"FullWidthPanel_layout-panel-1column__2Vc80\",\"layout-panel-2columns\":\"FullWidthPanel_layout-panel-2columns__2MdXX\",\"layout-halign-left\":\"FullWidthPanel_layout-halign-left__1qy-a\",\"layout-halign-right\":\"FullWidthPanel_layout-halign-right__3o8CC\",\"layout-halign-center\":\"FullWidthPanel_layout-halign-center__8W6W7\",\"layout-valign-top\":\"FullWidthPanel_layout-valign-top__2QYlW\",\"layout-valign-bottom\":\"FullWidthPanel_layout-valign-bottom__3IILO\",\"layout-valign-center\":\"FullWidthPanel_layout-valign-center__1JTOx\",\"component\":\"FullWidthPanel_component__isbCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ContentPanel_component__31uFg\"};","const keyCodes = {\r\n    ESC : 27,\r\n    ENTER: 13\r\n};\r\n\r\nexport default keyCodes;","import React from \"react\";\n\nexport type ComponentBaseSkin = \"default\";\n\nexport class ComponentBaseProperties {\n    componentClasses?: string[];\n    text?: string;\n    draggable?: boolean = false;\n    skin?: ComponentBaseSkin = \"default\";\n}\n\nexport class ComponentAnimatedProperties extends ComponentBaseProperties {\n    transitionName?: string;\n    transitionEnterTimeout?: number;\n    transitionLeaveTimeout?: number;\n}\n\nexport class ComponentBaseState {\n}\n\nexport class ComponentBase<ComponentBaseProperties, ComponentBaseState> extends React.Component<ComponentBaseProperties, ComponentBaseState, any> {\n    constructor(properties: ComponentBaseProperties, state?: ComponentBaseState) {\n        super(properties, state);\n    }\n\n    focusRef: {\n        focus: () => void;\n    } | undefined;\n}\n","import * as React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport { keyCodes } from '../../constants';\r\nimport styles from './SlidePanel.module.scss';\r\nimport { ComponentBaseState, ComponentAnimatedProperties, ComponentBase, ComponentBaseProperties } from '../../composition';\r\n\r\ninterface SlidePanelState extends ComponentBaseState {\r\n\topen: boolean\r\n}\r\n\r\ninterface SlidePanelProperties extends ComponentAnimatedProperties {\r\n\tonOpen?(): boolean,\r\n\tonClose?(closeCallback: Function): boolean,\r\n\tcontent?(props: InjectedSlidePanelProps): JSX.Element\r\n}\r\n\r\nexport interface InjectedSlidePanelProps {\r\n\topen: boolean,\r\n\topenPanel(): void,\r\n\tclosePanel(): void,\r\n\thidePanel(): void\r\n}\r\n\r\nexport class SlidePanel extends ComponentBase<SlidePanelProperties, SlidePanelState> {\r\n\r\n\tfocusRef: {\r\n\t\tfocus: () => void;\r\n\t} | undefined;\r\n\r\n\tconstructor(properties: SlidePanelProperties) {\r\n\t\tsuper(properties);\r\n\r\n\t\tthis.state = {\r\n\t\t\topen: true\r\n\t\t}\r\n\r\n\t\tthis.open = this.open.bind(this);\r\n\t\tthis.close = this.close.bind(this);\r\n\t\tthis.hide = this.hide.bind(this);\r\n\t\tthis.escFunction = this.escFunction.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//event listener for esc button\r\n\t\tdocument.addEventListener(\"keydown\", this.escFunction, false);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.focus();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\t//remove event listener for esc button\r\n\t\tdocument.removeEventListener(\"keydown\", this.escFunction, false);\r\n\t}\r\n\r\n\t//close panel on clicking ESC button\r\n\tescFunction(event: { keyCode: number; }) {\r\n\t\tif (this.state.open && event.keyCode === keyCodes.ESC) {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic close() {\r\n\t\tconst { onClose } = this.props;\r\n\t\tif (onClose && onClose(this.hide) === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.hide();\r\n\t}\r\n\r\n\tpublic hide() {\r\n\t\tthis.setState({ open: false });\r\n\t}\r\n\r\n\tpublic open() {\r\n\t\tconst { onOpen } = this.props;\r\n\t\tif (onOpen && onOpen() === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({ open: true })\r\n\t}\r\n\r\n\tpublic focus() {\r\n\t\tthis.focusRef && this.focusRef.focus();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { content: Content } = this.props;\r\n\t\tconst { transitionName = styles.SlidePanel, transitionEnterTimeout = 500, transitionLeaveTimeout = 500 } = this.props;\r\n\t\tconst { open } = this.state;\r\n\t\tconst classes = classNames(styles.component, this.props.componentClasses);\r\n\t\treturn (\r\n\t\t\t<CSSTransition in={open} key='SlidePanel' classNames={{\r\n\t\t\t\tenter: styles.enter,\r\n\t\t\t\tenterActive: styles.enterActive,\r\n\t\t\t\texit: styles.leave,\r\n\t\t\t\texitActive: styles.leaveActive\r\n\t\t\t}} timeout={500} unmountOnExit>\r\n\t\t\t\t{() => (\r\n\t\t\t\t\t<div className={styles.blocker}>\r\n\t\t\t\t\t\t<div className={classes}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tContent && <Content open={open}\r\n\t\t\t\t\t\t\t\t\topenPanel={this.open}\r\n\t\t\t\t\t\t\t\t\tclosePanel={this.close}\r\n\t\t\t\t\t\t\t\t\thidePanel={this.hide}\r\n\t\t\t\t\t\t\t\t\t{...this.props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{this.props.children}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</CSSTransition>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SlidePanel;\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./FullWidthPanel.module.scss\";\r\nimport { ComponentBaseProperties } from \"../../../composition\";\r\n\r\n\r\ninterface FullWidthPanelProperties extends ComponentBaseProperties {\r\n  skin?: string;\r\n}\r\n\r\nexport default class FullWidthPanel extends React.Component<FullWidthPanelProperties, any> {\r\n  public render() {\r\n\r\n    const componentClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n    return (\r\n      <div className={componentClasses} >{this.props.children}</div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./Title.module.scss\";\r\nimport { ComponentBaseProperties } from \"../../composition\";\r\n\r\ninterface TitleProperties extends ComponentBaseProperties {\r\n  skin?: string;\r\n}\r\n\r\nexport default class Title extends React.Component<TitleProperties> {\r\n  public render() {\r\n    const componentClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n\r\n    return (\r\n      <h1 className={componentClasses}>{this.props.text}</h1>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./IconRoundButton.module.scss\";\r\nimport { ComponentBaseProperties, ComponentBase } from \"../../composition\";\r\n\r\ninterface IconRoundButtonProperties extends ComponentBaseProperties {\r\n  skin?: string;\r\n}\r\n\r\nexport default class IconRoundButton extends ComponentBase<IconRoundButtonProperties, any> {\r\n  public render() {\r\n    const elementClasses = classNames(styles.component, this.props.componentClasses, this.props.skin)\r\n    return (\r\n      <div className={styles.componentWrapper}>\r\n        <div className={elementClasses}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./LabelWithIcon.module.scss\";\r\nimport { ComponentBaseProperties, ComponentBase } from \"../../composition\";\r\n\r\ninterface LabelWithIconProperties extends ComponentBaseProperties {\r\n  skin?: string;\r\n  iconClassName?: string;\r\n  badgeCounter?: number;\r\n  textHref?: string;\r\n}\r\n\r\nexport class LabelWithIcon extends ComponentBase<LabelWithIconProperties, any> {\r\n  public render() {\r\n\r\n    const elementClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n    const iconElementClasses = classNames(styles.iconElement, this.props.iconClassName, '.iconElement');\r\n\r\n    return (\r\n      <div className={elementClasses}>\r\n        <div className={iconElementClasses}></div>\r\n        {this.props.textHref ? <a href={this.props.textHref}>{this.props.text}</a> : <div>{this.props.text}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./CheckBox.module.scss\";\r\nimport { ComponentBaseProperties, ComponentBase } from \"../../composition\";\r\n\r\ninterface CheckBoxProperties extends ComponentBaseProperties {\r\n  textHref?: string;\r\n  skin?: string;\r\n}\r\n\r\nexport default class CheckBox extends ComponentBase<CheckBoxProperties, any> {\r\n  public render() {\r\n    const elementClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n    const checkBoxElementClasses = classNames(styles.checkBoxElement);\r\n\r\n    const textElementClasses = classNames(styles.textElement);\r\n    return (\r\n      <div className={elementClasses}>\r\n        <div className={checkBoxElementClasses}></div>\r\n        {this.props.textHref ? <div className={textElementClasses}>{this.props.text}</div> : <a className={textElementClasses} href={this.props.textHref}>{this.props.text}</a>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./Label.module.scss\";\r\nimport { ComponentBaseProperties, ComponentBase } from \"../../composition\";\r\n\r\ninterface LabelProperties extends ComponentBaseProperties {\r\n  textHref?: string;\r\n  skin?: string;\r\n}\r\n\r\nexport default class Label extends ComponentBase<LabelProperties, any> {\r\n  public render() {\r\n    const elementClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n\r\n\r\n    let textSizeClass = '';\r\n    if (this.props.text) {\r\n      textSizeClass = styles[this.props.text];\r\n    }\r\n    const textElementClasses = classNames(styles.textElement, textSizeClass);\r\n    return (\r\n      <div className={elementClasses}>\r\n        {this.props.textHref ? <div className={textElementClasses}>{this.props.text}</div> : <a className={textElementClasses} href={this.props.textHref}>{this.props.text}</a>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from 'classnames';\r\nimport styles from \"./ContentPanel.module.scss\";\r\nimport { ComponentBaseProperties, ComponentBaseState } from \"../../../composition\";\r\n\r\ninterface ContentPanelProperties extends ComponentBaseProperties {\r\n  skin?: string;\r\n  columns?: number;\r\n}\r\n\r\nexport default class ContentPanel extends React.Component<ContentPanelProperties, any> {\r\n  public render() {\r\n    const componentClasses = classNames(styles.component, this.props.componentClasses, this.props.skin);\r\n    return (\r\n      <div className={componentClasses}>{this.props.children}</div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { SlidePanel } from \"./components/SlidePanel\";\nimport FullWidthPanel from \"./components/Layout/FullWidthPanel\";\nimport Title from \"./components/Title\";\nimport IconRoundButton from \"./components/IconRoundButton\";\n\nimport './styles/style.scss';\nimport { LabelWithIcon } from './components/LabelWithIcon';\nimport CheckBox from './components/CheckBox';\nimport Label from './components/Label';\nimport ContentPanel from './components/Layout/ContentPanel';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SlidePanel >\n          <FullWidthPanel>\n            <Title text=\"Advanced Search\"></Title>\n            <IconRoundButton componentClasses={[' icon-icon-long-arrow-left']}></IconRoundButton>\n            <LabelWithIcon text=\"New Search\" iconClassName=\"icon-icon-filter-big\" badgeCounter={0}></LabelWithIcon>\n            <LabelWithIcon text=\"Help\" iconClassName=\"icon-question-circle\" badgeCounter={0} textHref=\"#\"></LabelWithIcon>\n          </FullWidthPanel>\n          <FullWidthPanel>\n            <CheckBox text=\"Case Sensitive\" skin='.' />\n            <Label text=\"Sort table by rearranging filter order with drag and drop\"></Label>\n          </FullWidthPanel>\n          <FullWidthPanel>\n            <ContentPanel>\n              <Label text=\"Customer Name\"></Label>\n            </ContentPanel>\n          </FullWidthPanel>\n        </SlidePanel>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-panel\":\"SlidePanel_layout-panel__3W8aj\",\"layout-panel-1column\":\"SlidePanel_layout-panel-1column__1Bx1W\",\"layout-panel-2columns\":\"SlidePanel_layout-panel-2columns__2Wdsr\",\"layout-halign-left\":\"SlidePanel_layout-halign-left__2nMPC\",\"layout-halign-right\":\"SlidePanel_layout-halign-right__s1YIf\",\"layout-halign-center\":\"SlidePanel_layout-halign-center__3VFR1\",\"layout-valign-top\":\"SlidePanel_layout-valign-top__1RtHv\",\"layout-valign-bottom\":\"SlidePanel_layout-valign-bottom__3UlAw\",\"layout-valign-center\":\"SlidePanel_layout-valign-center__29tVY\",\"blocker\":\"SlidePanel_blocker__3TDSK\",\"enter\":\"SlidePanel_enter__1-67W\",\"panel\":\"SlidePanel_panel__32NO2\",\"opacity\":\"SlidePanel_opacity__21YKJ\",\"wide\":\"SlidePanel_wide__WGAN4\",\"enterActive\":\"SlidePanel_enterActive__15egU\",\"leave\":\"SlidePanel_leave__3zTTC\",\"leaveActive\":\"SlidePanel_leaveActive__Ld-jf\",\"component\":\"SlidePanel_component__1HkCf\"};"],"sourceRoot":""}